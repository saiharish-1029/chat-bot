{"ast":null,"code":"var _jsxFileName = \"/workspace/chat-bot/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport useRecorder from \"../useRecorder\";\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder';\n// import axios from \"axios\"\nimport Index from \"../recorder\";\nimport tata from \"../Tata_logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const [recordState, setRecordState] = useState(null);\n  const [chatBotStatus, setChatBotStatus] = useState(false);\n  const [audioState, setAudioState] = useState(null);\n  const [audioLoading, setAudioLoading] = useState(false);\n  let [audioURL, isRecording, startRecording, stopRecording, audio] = useRecorder();\n  const [language, setLanguage] = useState(\"Hindi\");\n  const apis = {\n    Hindi: \"https://voicebot-service.antiers.world/process_audio\",\n    English: \"https://voicebot-service.antiers.world/process_audio_english\"\n  };\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputText.trim() === \"\") return;\n    addMessage(\"user\", inputText, \"text\");\n    // Simulate a response from the chatbot (you can replace this with actual chatbot logic)\n    setTimeout(() => {\n      addMessage(\"bot\", \"This is a sample response from the chatbot.\", \"text\");\n    }, 1000);\n    setInputText(\"\");\n  };\n  const audioSubmit = () => {\n    stopRecording();\n    // addMessage(\"user\", audio, \"audio\");\n    const formData = new FormData();\n    formData.append(\"audio\", audioURL);\n    fetch(\"/\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    }).then(responseData => console.log(responseData)).catch(error => console.log(error));\n  };\n  const addMessage = (sender, text, type) => {\n    const newMessage = {\n      sender,\n      text,\n      type\n    };\n    setMessages(prev => [...prev, newMessage]);\n  };\n\n  // const onStop = (audioData) => {\n  //   console.log(\"user\", audioData, \"audio\");\n  //   // setAudioState(audioData)\n  //   const data = new Blob([audioData.url], { type: \"audio/*\" })\n  //   const met = new FormData()\n  //   met.append(\"file\", audioData.url)\n  //   // met.append(\"audio\", data)\n  //   console.log(\"audio\", data)\n  //   setAudioLoading(true)\n  //   axios.post(\"http://localhost:5000/users\", met, { \"content-type\": \"multipart/form-data\", }).then(({ Response }) => { console.log(Response) }).catch(err => console.log(err)).finally(() => setAudioLoading(false))\n  //   fetch(\"/process_audio\", { method: \"post\", body: met }).then(res => res.json()).then((responseData) => {\n  //     setAudioLoading(false)\n  //     console.log(responseData)\n  //   }).catch((error) => {\n  //     setAudioLoading(false)\n  //     console.log(error)\n  //   })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-animator\",\n      children: chatBotStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatbot-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), \"TATA Steel Voice Bot\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-window-close close\",\n              onClick: () => setChatBotStatus(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: language,\n            onChange: e => setLanguage(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Hindi\",\n              children: \"Hindi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"English\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-messages\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender === \"user\" ? \"user-message\" : \"bot-message\"}`,\n            children: message.type === \"text\" ? message.text : /*#__PURE__*/_jsxDEV(\"audio\", {\n              src: message.text,\n              type: \"audio/mp3\",\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 59\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"promo-video\",\n            children: /*#__PURE__*/_jsxDEV(Index, {\n              addMessage: addMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-icon\",\n        onClick: () => setChatBotStatus(true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tata,\n          width: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"Tfl/ko+Mz5DXOv6wApzXjahi+Ms=\", false, function () {\n  return [useRecorder];\n});\n_c = Chatbot;\nexport default Chatbot;\n\n// {/* <button type=\"button\" className=\"send-button\" onMouseDown={() => console.log(\"down\")} onMouseUp={() => console.log(\"up\")}><i className=\"fas fa-microphone\"></i></button> */}\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRecorder","AudioReactRecorder","RecordState","Index","tata","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","inputText","setInputText","recordState","setRecordState","chatBotStatus","setChatBotStatus","audioState","setAudioState","audioLoading","setAudioLoading","audioURL","isRecording","startRecording","stopRecording","audio","language","setLanguage","apis","Hindi","English","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","addMessage","setTimeout","audioSubmit","formData","FormData","append","fetch","method","body","headers","then","responseData","console","log","catch","error","sender","text","type","newMessage","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","map","message","index","src","controls","onSubmit","width","_c","$RefreshReg$"],"sources":["/workspace/chat-bot/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\nimport useRecorder from \"../useRecorder\";\r\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\r\n// import axios from \"axios\"\r\nimport Index from \"../recorder\";\r\nimport tata from \"../Tata_logo.png\"\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([])\r\n  const [inputText, setInputText] = useState(\"\")\r\n  const [recordState, setRecordState] = useState(null)\r\n  const [chatBotStatus, setChatBotStatus] = useState(false)\r\n  const [audioState, setAudioState] = useState(null)\r\n  const [audioLoading, setAudioLoading] = useState(false)\r\n  let [audioURL, isRecording, startRecording, stopRecording, audio] = useRecorder();\r\n  const [language, setLanguage] = useState(\"Hindi\")\r\n  const apis = {\r\n    Hindi: \"https://voicebot-service.antiers.world/process_audio\",\r\n    English: \"https://voicebot-service.antiers.world/process_audio_english\",\r\n  }\r\n  const handleInputChange = (e) => {\r\n    setInputText(e.target.value)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.trim() === \"\") return;\r\n    addMessage(\"user\", inputText, \"text\");\r\n    // Simulate a response from the chatbot (you can replace this with actual chatbot logic)\r\n    setTimeout(() => {\r\n      addMessage(\"bot\", \"This is a sample response from the chatbot.\", \"text\");\r\n    }, 1000);\r\n    setInputText(\"\")\r\n  };\r\n\r\n  const audioSubmit = () => {\r\n    stopRecording()\r\n    // addMessage(\"user\", audio, \"audio\");\r\n    const formData = new FormData()\r\n    formData.append(\"audio\", audioURL)\r\n    fetch(\"/\", { method: \"POST\", body: formData, headers: { \"content-type\": \"multipart/form-data\", } }).then((responseData) => console.log(responseData)).catch((error) => console.log(error))\r\n  }\r\n\r\n  const addMessage = (sender, text, type) => {\r\n    const newMessage = { sender, text, type };\r\n    setMessages((prev) => [...prev, newMessage])\r\n  };\r\n\r\n  // const onStop = (audioData) => {\r\n  //   console.log(\"user\", audioData, \"audio\");\r\n  //   // setAudioState(audioData)\r\n  //   const data = new Blob([audioData.url], { type: \"audio/*\" })\r\n  //   const met = new FormData()\r\n  //   met.append(\"file\", audioData.url)\r\n  //   // met.append(\"audio\", data)\r\n  //   console.log(\"audio\", data)\r\n  //   setAudioLoading(true)\r\n  //   axios.post(\"http://localhost:5000/users\", met, { \"content-type\": \"multipart/form-data\", }).then(({ Response }) => { console.log(Response) }).catch(err => console.log(err)).finally(() => setAudioLoading(false))\r\n  //   fetch(\"/process_audio\", { method: \"post\", body: met }).then(res => res.json()).then((responseData) => {\r\n  //     setAudioLoading(false)\r\n  //     console.log(responseData)\r\n  //   }).catch((error) => {\r\n  //     setAudioLoading(false)\r\n  //     console.log(error)\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-animator\">\r\n        {chatBotStatus ? <div className=\"chatbot\">\r\n          <div>\r\n            <div className=\"chatbot-header\">\r\n              <div />\r\n              TATA Steel Voice Bot\r\n              <i className=\"fas fa-window-close close\" onClick={() => setChatBotStatus(false)}></i>\r\n            </div>\r\n            <select value={language} onChange={e => setLanguage(e.target.value)}>\r\n              <option value=\"Hindi\">Hindi</option>\r\n              <option value=\"English\">English</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"chatbot-messages\">\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`message ${message.sender === \"user\" ? \"user-message\" : \"bot-message\"\r\n                  }`}\r\n              >\r\n                {message.type === \"text\" ? message.text : <audio src={message.text} type=\"audio/mp3\" controls />}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* <div style={{ opacity: 0, height: 0, overflow: \"hidden\" }}>\r\n          <AudioReactRecorder state={recordState} onStop={onStop} />\r\n        </div> */}\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"promo-video\">\r\n              <Index addMessage={addMessage} />\r\n            </div>\r\n          </form>\r\n        </div> : <div className=\"chatbot-icon\" onClick={() => setChatBotStatus(true)}><img src={tata} width=\"50px\" /></div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n\r\n// {/* <button type=\"button\" className=\"send-button\" onMouseDown={() => console.log(\"down\")} onMouseUp={() => console.log(\"up\")}><i className=\"fas fa-microphone\"></i></button> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}