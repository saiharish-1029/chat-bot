{"ast":null,"code":"import React,{useState}from\"react\";import\"./Chatbot.css\";import useRecorder from\"../useRecorder\";import AudioReactRecorder,{RecordState}from'audio-react-recorder';// import axios from \"axios\"\nimport Index from\"../recorder\";import tata from\"../Tata_logo.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Chatbot(){const[messages,setMessages]=useState([]);const[inputText,setInputText]=useState(\"\");const[recordState,setRecordState]=useState(null);const[chatBotStatus,setChatBotStatus]=useState(false);const[audioState,setAudioState]=useState(null);const[audioLoading,setAudioLoading]=useState(false);let[audioURL,isRecording,startRecording,stopRecording,audio]=useRecorder();const[language,setLanguage]=useState(\"Hindi\");const apis={Hindi:\"https://voicebot-service.antiers.world/process_audio\",English:\"https://voicebot-service.antiers.world/process_audio_english\"};const handleInputChange=e=>{setInputText(e.target.value);};const handleSubmit=e=>{e.preventDefault();if(inputText.trim()===\"\")return;addMessage(\"user\",inputText,\"text\");// Simulate a response from the chatbot (you can replace this with actual chatbot logic)\nsetTimeout(()=>{addMessage(\"bot\",\"This is a sample response from the chatbot.\",\"text\");},1000);setInputText(\"\");};const audioSubmit=()=>{stopRecording();// addMessage(\"user\", audio, \"audio\");\nconst formData=new FormData();formData.append(\"audio\",audioURL);fetch(\"/\",{method:\"POST\",body:formData,headers:{\"content-type\":\"multipart/form-data\"}}).then(responseData=>console.log(responseData)).catch(error=>console.log(error));};const addMessage=(sender,text,type)=>{const newMessage={sender,text,type};setMessages(prev=>[...prev,newMessage]);};// const onStop = (audioData) => {\n//   console.log(\"user\", audioData, \"audio\");\n//   // setAudioState(audioData)\n//   const data = new Blob([audioData.url], { type: \"audio/*\" })\n//   const met = new FormData()\n//   met.append(\"file\", audioData.url)\n//   // met.append(\"audio\", data)\n//   console.log(\"audio\", data)\n//   setAudioLoading(true)\n//   axios.post(\"http://localhost:5000/users\", met, { \"content-type\": \"multipart/form-data\", }).then(({ Response }) => { console.log(Response) }).catch(err => console.log(err)).finally(() => setAudioLoading(false))\n//   fetch(\"/process_audio\", { method: \"post\", body: met }).then(res => res.json()).then((responseData) => {\n//     setAudioLoading(false)\n//     console.log(responseData)\n//   }).catch((error) => {\n//     setAudioLoading(false)\n//     console.log(error)\n//   })\n// }\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-animator\",children:chatBotStatus?/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-header\",children:[/*#__PURE__*/_jsx(\"div\",{}),\"TATA Steel Voice Bot\",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-window-close close\",onClick:()=>setChatBotStatus(false)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender===\"user\"?\"user-message\":\"bot-message\"),children:message.type===\"text\"?message.text:/*#__PURE__*/_jsx(\"audio\",{src:message.text,type:\"audio/mp3\",controls:true})},index))}),/*#__PURE__*/_jsx(\"form\",{className:\"form\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"div\",{className:\"promo-video\",children:/*#__PURE__*/_jsx(Index,{addMessage:addMessage})})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-icon\",onClick:()=>setChatBotStatus(true),children:/*#__PURE__*/_jsx(\"img\",{src:tata,width:\"50px\"})})})});}export default Chatbot;// {/* <button type=\"button\" className=\"send-button\" onMouseDown={() => console.log(\"down\")} onMouseUp={() => console.log(\"up\")}><i className=\"fas fa-microphone\"></i></button> */}","map":{"version":3,"names":["React","useState","useRecorder","AudioReactRecorder","RecordState","Index","tata","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","inputText","setInputText","recordState","setRecordState","chatBotStatus","setChatBotStatus","audioState","setAudioState","audioLoading","setAudioLoading","audioURL","isRecording","startRecording","stopRecording","audio","language","setLanguage","apis","Hindi","English","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","addMessage","setTimeout","audioSubmit","formData","FormData","append","fetch","method","body","headers","then","responseData","console","log","catch","error","sender","text","type","newMessage","prev","className","children","onClick","map","message","index","concat","src","controls","onSubmit","width"],"sources":["/workspace/chat-bot/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\nimport useRecorder from \"../useRecorder\";\r\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\r\n// import axios from \"axios\"\r\nimport Index from \"../recorder\";\r\nimport tata from \"../Tata_logo.png\"\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([])\r\n  const [inputText, setInputText] = useState(\"\")\r\n  const [recordState, setRecordState] = useState(null)\r\n  const [chatBotStatus, setChatBotStatus] = useState(false)\r\n  const [audioState, setAudioState] = useState(null)\r\n  const [audioLoading, setAudioLoading] = useState(false)\r\n  let [audioURL, isRecording, startRecording, stopRecording, audio] = useRecorder();\r\n  const [language, setLanguage] = useState(\"Hindi\")\r\n  const apis = {\r\n    Hindi: \"https://voicebot-service.antiers.world/process_audio\",\r\n    English: \"https://voicebot-service.antiers.world/process_audio_english\",\r\n  }\r\n  const handleInputChange = (e) => {\r\n    setInputText(e.target.value)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.trim() === \"\") return;\r\n    addMessage(\"user\", inputText, \"text\");\r\n    // Simulate a response from the chatbot (you can replace this with actual chatbot logic)\r\n    setTimeout(() => {\r\n      addMessage(\"bot\", \"This is a sample response from the chatbot.\", \"text\");\r\n    }, 1000);\r\n    setInputText(\"\")\r\n  };\r\n\r\n  const audioSubmit = () => {\r\n    stopRecording()\r\n    // addMessage(\"user\", audio, \"audio\");\r\n    const formData = new FormData()\r\n    formData.append(\"audio\", audioURL)\r\n    fetch(\"/\", { method: \"POST\", body: formData, headers: { \"content-type\": \"multipart/form-data\", } }).then((responseData) => console.log(responseData)).catch((error) => console.log(error))\r\n  }\r\n\r\n  const addMessage = (sender, text, type) => {\r\n    const newMessage = { sender, text, type };\r\n    setMessages((prev) => [...prev, newMessage])\r\n  };\r\n\r\n  // const onStop = (audioData) => {\r\n  //   console.log(\"user\", audioData, \"audio\");\r\n  //   // setAudioState(audioData)\r\n  //   const data = new Blob([audioData.url], { type: \"audio/*\" })\r\n  //   const met = new FormData()\r\n  //   met.append(\"file\", audioData.url)\r\n  //   // met.append(\"audio\", data)\r\n  //   console.log(\"audio\", data)\r\n  //   setAudioLoading(true)\r\n  //   axios.post(\"http://localhost:5000/users\", met, { \"content-type\": \"multipart/form-data\", }).then(({ Response }) => { console.log(Response) }).catch(err => console.log(err)).finally(() => setAudioLoading(false))\r\n  //   fetch(\"/process_audio\", { method: \"post\", body: met }).then(res => res.json()).then((responseData) => {\r\n  //     setAudioLoading(false)\r\n  //     console.log(responseData)\r\n  //   }).catch((error) => {\r\n  //     setAudioLoading(false)\r\n  //     console.log(error)\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-animator\">\r\n        {chatBotStatus ? <div className=\"chatbot\">\r\n          <div className=\"chatbot-header\">\r\n            <div />\r\n            TATA Steel Voice Bot\r\n            <i className=\"fas fa-window-close close\" onClick={() => setChatBotStatus(false)}></i>\r\n          </div>\r\n          <div className=\"chatbot-messages\">\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`message ${message.sender === \"user\" ? \"user-message\" : \"bot-message\"\r\n                  }`}\r\n              >\r\n                {message.type === \"text\" ? message.text : <audio src={message.text} type=\"audio/mp3\" controls />}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {/* <div style={{ opacity: 0, height: 0, overflow: \"hidden\" }}>\r\n          <AudioReactRecorder state={recordState} onStop={onStop} />\r\n        </div> */}\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"promo-video\">\r\n              <Index addMessage={addMessage} />\r\n            </div>\r\n          </form>\r\n        </div> : <div className=\"chatbot-icon\" onClick={() => setChatBotStatus(true)}><img src={tata} width=\"50px\" /></div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n\r\n// {/* <button type=\"button\" className=\"send-button\" onMouseDown={() => console.log(\"down\")} onMouseUp={() => console.log(\"up\")}><i className=\"fas fa-microphone\"></i></button> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}