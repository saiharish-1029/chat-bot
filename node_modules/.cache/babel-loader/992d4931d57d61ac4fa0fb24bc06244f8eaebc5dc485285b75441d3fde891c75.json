{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from\"axios\";import Loader from\"react-js-loader\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";let chunks=[];function Index(_ref){let{addMessage}=_ref;const[mediaRecorder,setMediaRecorder]=useState(null);const[mediaRecorderStatus,setMediaRecorderStatus]=useState(false);const[mediaRecordingStatus,setMediaRecordingStatus]=useState(false);const[loading,setLoading]=useState(false);// const [audioS, setAudio] = useState(null)\nuseEffect(()=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){navigator.mediaDevices.getUserMedia({audio:true}).then(stream=>{const mediaRecorderS=new MediaRecorder(stream);console.log(mediaRecorderS);setMediaRecorder(mediaRecorderS);setMediaRecorderStatus(true);}).catch(error=>console.log(error));}else{alert(\"cannot record the audio on this device\");}},[]);const onStopRecording=()=>{setLoading(true);mediaRecorder.stop();setMediaRecordingStatus(false);console.log(mediaRecorder.state);// mediaRecorder.ondataavailable = (e) => {\nconsole.log(\"recorder stopped\");mediaRecorder.ondataavailable=e=>{console.log(\"media storing data\",e);const blob=new Blob([e.data],{type:\"audio/mpeg\"});console.log(blob);const formData=new FormData();formData.append(\"audio\",blob,\"recording.mp3\");sendToBackend(formData);// const audioURL = window.URL.createObjectURL(blob);\n// setAudio(audioURL)\n};// }\n};const replayPlayer=audioData=>{function hexToBytes(hex){for(var bytes=[],c=0;c<hex.length;c+=2)bytes.push(parseInt(hex.substr(c,2),16));return new Uint8Array(bytes);}function hexToBinary(hex){return new Uint8Array(hex.match(/.{1,2}/g).map(byte=>parseInt(byte,16)));}var hexValues=audioData.split(\" \");// Your hexadecimal audio data\nconst audioBufferBytes=new Uint8Array(hexValues.map(hex=>parseInt(hex,16)));const audioContext=new(window.AudioContext||window.webkitAudioContext)();const audioSource=audioContext.createBufferSource();audioContext.decodeAudioData(audioBufferBytes.buffer,audioBuffer=>{// Set the decoded audio data as the buffer\naudioSource.buffer=audioBuffer;// Connect the AudioBufferSourceNode to the AudioContext's destination (e.g., speakers)\naudioSource.connect(audioContext.destination);// Start playing the audio\naudioSource.start();},error=>{console.error(\"Error decoding audio:\",error);});};const sendToBackend=data=>{console.log(\"Sending to Backend\");axios.post(\"https://voicebot-service.antiers.world/process_audio\",data).then(response=>{// localStorage.setItem(\"audio\", response.data.audio_response_buffer);\nconsole.log(response);// setMyAudioSrc(response.data.audio_response_buffer);\nreplayPlayer(response.data.audio_response_buffer);addMessage(\"bot\",response.data.text_response,\"text\");setLoading(false);}).catch(error=>{console.error(\"Error sending audio to backend:\",error);setLoading(false);});};if(!mediaRecorderStatus)return/*#__PURE__*/_jsx(\"div\",{children:\"not\"});return/*#__PURE__*/_jsx(\"div\",{className:\"promo-video\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"send-button\",disabled:loading,onMouseDown:()=>{setMediaRecordingStatus(true);mediaRecorder===null||mediaRecorder===void 0?void 0:mediaRecorder.start();console.log(mediaRecorder.state);},onMouseUp:()=>onStopRecording(),children:loading?/*#__PURE__*/_jsx(\"div\",{className:\"loader\",children:/*#__PURE__*/_jsx(Loader,{type:\"spinner-circle\",bgColor:\"white\",color:\"white\",size:35})}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-microphone\"})}),mediaRecordingStatus?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"waves wave-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"waves wave-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"waves wave-3\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"none\"})]})});}export default Index;","map":{"version":3,"names":["React","useEffect","useState","axios","Loader","jsx","_jsx","jsxs","_jsxs","chunks","Index","_ref","addMessage","mediaRecorder","setMediaRecorder","mediaRecorderStatus","setMediaRecorderStatus","mediaRecordingStatus","setMediaRecordingStatus","loading","setLoading","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorderS","MediaRecorder","console","log","catch","error","alert","onStopRecording","stop","state","ondataavailable","e","blob","Blob","data","type","formData","FormData","append","sendToBackend","replayPlayer","audioData","hexToBytes","hex","bytes","c","length","push","parseInt","substr","Uint8Array","hexToBinary","match","map","byte","hexValues","split","audioBufferBytes","audioContext","window","AudioContext","webkitAudioContext","audioSource","createBufferSource","decodeAudioData","buffer","audioBuffer","connect","destination","start","post","response","audio_response_buffer","text_response","children","className","disabled","onMouseDown","onMouseUp","bgColor","color","size"],"sources":["/workspace/chat-bot/src/recorder/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from \"axios\"\nimport Loader from \"react-js-loader\"\n\nlet chunks = [];\nfunction Index({ addMessage }) {\n    const [mediaRecorder, setMediaRecorder] = useState(null)\n    const [mediaRecorderStatus, setMediaRecorderStatus] = useState(false)\n    const [mediaRecordingStatus, setMediaRecordingStatus] = useState(false)\n    const [loading, setLoading] = useState(false)\n    // const [audioS, setAudio] = useState(null)\n    useEffect(() => {\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n                const mediaRecorderS = new MediaRecorder(stream);\n                console.log(mediaRecorderS)\n                setMediaRecorder(mediaRecorderS)\n                setMediaRecorderStatus(true)\n            }).catch((error) => console.log(error))\n        } else {\n            alert(\"cannot record the audio on this device\")\n        }\n    }, [])\n\n    const onStopRecording = () => {\n        setLoading(true)\n        mediaRecorder.stop();\n        setMediaRecordingStatus(false)\n        console.log(mediaRecorder.state);\n        // mediaRecorder.ondataavailable = (e) => {\n        console.log(\"recorder stopped\");\n        mediaRecorder.ondataavailable = (e) => {\n            console.log(\"media storing data\", e)\n            const blob = new Blob([e.data], { type: \"audio/mpeg\" });\n            console.log(blob)\n            const formData = new FormData()\n            formData.append(\"audio\", blob, \"recording.mp3\")\n            sendToBackend(formData)\n            // const audioURL = window.URL.createObjectURL(blob);\n            // setAudio(audioURL)\n        };\n        // }\n    }\n\n    const replayPlayer = (audioData) => {\n        function hexToBytes(hex) {\n            for (var bytes = [], c = 0; c < hex.length; c += 2)\n                bytes.push(parseInt(hex.substr(c, 2), 16));\n            return new Uint8Array(bytes);\n        }\n        function hexToBinary(hex) {\n            return new Uint8Array(hex.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n        }\n        var hexValues = audioData.split(\" \"); // Your hexadecimal audio data\n        const audioBufferBytes = new Uint8Array(hexValues.map(hex => parseInt(hex, 16)));\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        const audioSource = audioContext.createBufferSource();\n        audioContext.decodeAudioData(audioBufferBytes.buffer, (audioBuffer) => {\n            // Set the decoded audio data as the buffer\n            audioSource.buffer = audioBuffer;\n\n            // Connect the AudioBufferSourceNode to the AudioContext's destination (e.g., speakers)\n            audioSource.connect(audioContext.destination);\n\n            // Start playing the audio\n            audioSource.start();\n        }, (error) => {\n            console.error(\"Error decoding audio:\", error);\n        });\n    }\n\n    const sendToBackend = (data) => {\n        console.log(\"Sending to Backend\")\n        axios\n            .post(\"https://voicebot-service.antiers.world/process_audio\", data)\n            .then((response) => {\n                // localStorage.setItem(\"audio\", response.data.audio_response_buffer);\n                console.log(response)\n                // setMyAudioSrc(response.data.audio_response_buffer);\n                replayPlayer(response.data.audio_response_buffer)\n                addMessage(\"bot\", response.data.text_response, \"text\")\n                setLoading(false)\n            })\n            .catch((error) => {\n                console.error(\"Error sending audio to backend:\", error);\n                setLoading(false)\n            });\n    }\n\n    if (!mediaRecorderStatus) return <div>not</div>\n\n    return (\n        <div className=\"promo-video\">\n            <div>\n                <button type=\"button\" className=\"send-button\" disabled={loading} onMouseDown={() => {\n                    setMediaRecordingStatus(true)\n                    mediaRecorder?.start()\n                    console.log(mediaRecorder.state);\n                }} onMouseUp={() => onStopRecording()}>{loading ? <div className='loader'>\n                    <Loader type=\"spinner-circle\" bgColor={\"white\"} color={\"white\"} size={35} />\n                </div> : <i className=\"fas fa-microphone\"></i>}</button>\n                {mediaRecordingStatus ? <div>\n                    <div className=\"waves wave-1\" />\n                    <div className=\"waves wave-2\" />\n                    <div className=\"waves wave-3\" />\n                </div> : <div className='none' />}\n            </div>\n        </div>\n    )\n}\n\nexport default Index\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}